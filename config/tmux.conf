#ssh_ Little bits
set -g mouse on
set -g prefix C-Space
bind r source-file ~/.tmux.conf
bind-key C-Space last-window
set -g base-index 1

# fix ssh agent when tmux is detached
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

set-option -ga terminal-overrides ",xterm-256color:Tc"

# New terminals inherit current working directory
bind-key c new-window -c '#{pane_current_path}'
bind-key '"' split-window -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'
bind-key - split-window -c '#{pane_current_path}'
bind-key | split-window -h -c '#{pane_current_path}'

bind-key s setw synchronize-panes

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow

# default window title colors
set -g mode-style fg=colour244,bg=default,dim

# active window title colors
setw -g window-status-current-style fg=colour166

# Status and Bell
set -g status-justify centre # center align window list
set -g status-left-length 70
set -g status-right-length 70
set -g status-justify centre
set -g status-bg colour234
set -g status-left '#[default]┃ #[fg=green,bright]#h #[default] ┃ #[fg=blue]#S #I:#P #[default]┃'
set -g status-right "#[default]┃ VMW: #(boyohboy fetch '{\"ticker\":\"VMW\"}') ┃ #[fg=white]%l:%M:%S %p #[default] ┃ #[fg=blue]%a %Y-%m-%d #[default] ┃"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-Left if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-Down if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-Up if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#bind-key -T copy-mode-vi C-h select-pane -L
#bind-key -T copy-mode-vi C-j select-pane -D
#bind-key -T copy-mode-vi C-k select-pane -U
#bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

# Also allow ctrl for vim-tmux integration
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

set -sg escape-time 0

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'christoomey/vim-tmux-navigator'

run '~/.tmux/plugins/tpm/tpm'

bind-key -n S-Up set-option -g status
bind-key -n S-Down set-option -g status
bind-key -n S-Right next-window
bind-key -n S-Left previous-window
